apiVersion: v1
kind: Namespace
metadata:
  name: webhoussamdmz

apiVersion: v1
kind: Service
metadata:
  name: wordpress
  namespace: webhoussamdmz
spec:
  selector:
    app: wordpress
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80


apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  namespace: webhoussamdmz
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
        - name: wordpress
          image: wordpress:latest
          ports:
            - containerPort: 80
          env:
            - name: WORDPRESS_DB_HOST
              value: mysql
            - name: WORDPRESS_DB_PASSWORD
              value: houssam2000
          volumeMounts:
            - name: wordpress-persistent-storage
              mountPath: /var/www/html
      volumes:
        - name: wordpress-persistent-storage
          emptyDir: {}


apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: webhoussamdmz
spec:
  selector:
    app: mysql
  ports:
    - name: mysql
      protocol: TCP
      port: 3306
      targetPort: 3306


apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: webhoussamdmz
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:latest
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: houssam2000
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          emptyDir: {}

apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: webhoussamdmz
spec:
  selector:
    app: mongodb
  ports:
    - name: mongodb
      protocol: TCP
      port: 27017
      targetPort: 27017


apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: webhoussamdmz
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:latest
          volumeMounts:
            - name: mongodb-persistent-storage
              mountPath: /data/db
      volumes:
        - name: mongodb-persistent-storage
          emptyDir: {}

